const http=require("http"),url=require("url"),{isNumberPrime:isNumberPrime}=require("./prime"),PORT=process.env.PORT||3e3,server=http.createServer(((e,r)=>{r.setHeader("X-XSS-Protection","1; mode=block"),r.setHeader("X-Frame-Options","DENY"),r.setHeader("X-Content-Type-Options","nosniff");const{pathname:t,query:n}=url.parse(e.url,!0);if("/isPrimeNumber"===t&&"GET"===e.method){const{number:e}=n;if(!e)return r.writeHead(400,{"Content-Type":"text/plain"}),void r.end("Please provide a number as query parameter: number");const t=parseFloat(e);if(isNaN(t))return r.writeHead(400,{"Content-Type":"text/plain"}),void r.end(`${e} is not a valid number.`);try{const e=isNumberPrime(t);r.writeHead(200,{"Content-Type":"text/plain"}),r.end(e)}catch(e){r.write(500,{"Content-Type":"text/plain"}),r.end(e.message)}}else r.writeHead(404,{"Content-Type":"text/plain"}),r.end("Not Found")})).on("error",(e=>{console.error("Server error:",e.message)}));process.on("uncaughtException",(e=>{console.error(e.message),process.exit(1)}));const createServer=()=>server;require.main===module&&server.listen(PORT,(()=>{console.log(`Server running at http://localhost:${PORT}/`)})),module.exports={createServer:createServer};